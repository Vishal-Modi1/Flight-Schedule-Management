@model ViewModels.VM.LoginVM
@{ Layout = null; }

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <meta http-equiv="x-ua-compatible" content="ie=edge" />

    <title>Flight Schedule Management</title>
    <partial name="AdminPortal/_Styles" />
</head>
<body class="login-page" style="min-height: 322.8px; background-image: url('/img/background.jpg'); background-repeat: no-repeat; background-attachment: fixed; background-position: center; ">
   
    <div class="login-box">
        <div class="login-logo">
        </div>
        <!-- /.login-logo -->
        <div class="card" style="background-color: #ffffff94;">
            <div class="card-body login-card-body" style="background: rgb(250 250 250 / 5%);">
                <h3 class="text-center">Login</h3>
                @using (Html.BeginForm("login", "/account", FormMethod.Post, new { id = "login" }))
                {
                    <div style="margin-bottom:20px">
                        <div class="input-group">
                            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", placeholder = "Email" } })
                            <div class="input-group-append">
                                <div class="input-group-text">
                                    <span class="fas fa-envelope"></span>
                                </div>
                            </div>
                        </div>
                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                    </div>

                    <div style="margin-bottom:20px">
                        <div class="input-group">
                            @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control", placeholder = "Password" } })
                            <div class="input-group-append">
                                <div class="input-group-text">
                                    <span class="fas fa-lock"></span>
                                </div>
                            </div>
                        </div>

                        @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })

                    </div>
                    <div class="row">
                        <div class="col-12">
                            <button type="submit" class="btn btn-primary btn-block">Sign In</button>
                        </div>
                    </div>}

                <br />
                <div class="row">
                    <div class="col-12">
                        <a href="@Url.Action("ForgotPassword","/Account")">I forgot my password</a>
                    </div>
                </div>
            </div>
        </div>

        <partial name="AdminPortal/_Scripts" />
    </div>
</body>

</html>

<script src="../../plugins/jquery/jquery.min.js"></script>
<script src="../../plugins/jquery-validation/jquery.validate.min.js"></script>

<script>
    $(function () {
        $('#login').validate({
            rules: {
                Email: {
                    required: true,
                    email: true,
                },
                Password: {
                    required: true
                }
            },
            messages: {
                Email: {
                    required: "Please enter a email address",
                    email: "Please enter a vaild email address"
                },
                Password: {
                    required: "Please provide a password"

                }
            },

            errorElement: 'span',
            errorPlacement: function (error, element) {
                error.addClass('invalid-feedback');
                element.closest('.form-group').append(error);
            },
            highlight: function (element, errorClass, validClass) {

                $(element).addClass('is-invalid');
            },
            unhighlight: function (element, errorClass, validClass) {
                $(element).removeClass('is-invalid');
            }
        });



    });
</script>
@if (ViewBag.response != null)
{
<script>
    $(function () {
        if (@(Convert.ToInt32(ViewBag.response.Status)) == 200)
            toastr.success("@(Convert.ToString(ViewBag.response.Message))");
        else
            toastr.error("@(Convert.ToString(ViewBag.response.Message))");
    });
</script>
}