@using DataModels.Models;
@model ViewModels.VM.AirCraftVM
@{
    Layout = null;
    var noOfEngine = Model.NoofEngines;
    Model.AircraftEquipmentTimesList = new List<AircraftEquipmentTime>();

    for (int i = 0; i < noOfEngine; i++)
    {
        Model.AircraftEquipmentTimesList.Add(new AircraftEquipmentTime
        {
            EquipmentName = string.Empty
        });
    }
    var noOfPropellers = Model.NoOfPropellers;
    for (int i = 0; i < noOfPropellers; i++)
    {
        Model.AircraftEquipmentTimesList.Add(new AircraftEquipmentTime
        {
            EquipmentName = string.Empty
        });
    }

}


@for (int i = 0; i < noOfEngine; i++)
{
    @Html.HiddenFor(m => m.AircraftEquipmentTimesList[i].Id)
    @Html.HiddenFor(m => m.AircraftEquipmentTimesList[i].AircraftId)
    <div class="col-4">
        <div class="form-group">
            <label for="">Engine @(i+1)</label>
        </div>
    </div>
    <div class="col-4">
        <div class="form-group">
            @Html.LabelFor(m => m.AircraftEquipmentTimesList[i].EquipmentName, "Equipment Name" + (i + 1), new { htmlAttributes = new { @class = "control-label" } })
            @Html.EditorFor(m => m.AircraftEquipmentTimesList[i].EquipmentName, new { htmlAttributes = new { placeholder = "Enter Equipment Name " + (i + 1), @class = "form-control", @required = "required" } })
            @Html.ValidationMessageFor(m => m.AircraftEquipmentTimesList[i].EquipmentName)
        </div>
    </div>
    <div class="col-4">
        <div class="form-group">
            @Html.LabelFor(m => m.AircraftEquipmentTimesList[i].Hours, new { htmlAttributes = new { @class = "control-label" } })
            @Html.EditorFor(m => m.AircraftEquipmentTimesList[i].Hours, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
            @Html.ValidationMessageFor(m => m.AircraftEquipmentTimesList[i].Hours)
        </div>
    </div>
}
@if (noOfPropellers > 0)
{
    <div class="col-12">
        <hr />
    </div>
}
@for (int i = noOfEngine; i < (noOfPropellers + noOfEngine); i++)
{
    @Html.HiddenFor(m => m.AircraftEquipmentTimesList[i].Id)
    @Html.HiddenFor(m => m.AircraftEquipmentTimesList[i].AircraftId)
    <div class="col-4">
        <div class="form-group">
            <label for="">Propeller @(i + 1 - noOfEngine)</label>
        </div>
    </div>
    <div class="col-4">
        <div class="form-group">
            @Html.LabelFor(m => m.AircraftEquipmentTimesList[i].EquipmentName, "Equipment Name " + (i + 1 - noOfEngine), new { htmlAttributes = new { @class = "control-label" } })
            @Html.EditorFor(m => m.AircraftEquipmentTimesList[i].EquipmentName, new { htmlAttributes = new { placeholder = "Enter Equipment Name " + (i + 1 - noOfEngine), @class = "form-control", @required = "required" } })
            @Html.ValidationMessageFor(m => m.AircraftEquipmentTimesList[i].EquipmentName)
        </div>
    </div>
    <div class="col-4">
        <div class="form-group">
            @Html.LabelFor(m => m.AircraftEquipmentTimesList[i].Hours, new { htmlAttributes = new { @class = "control-label" } })
            @Html.EditorFor(m => m.AircraftEquipmentTimesList[i].Hours, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
            @Html.ValidationMessageFor(m => m.AircraftEquipmentTimesList[i].Hours)
        </div>
    </div>
}